# From https://danielmiessler.com/study/tmux/
unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix
# Set a Ctrl-b shortcut for reloading your tmux config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

bind-key -n C-h select-pane -L
bind-key -n C-j select-pane -D
bind-key -n C-k select-pane -U
bind-key -n C-l select-pane -R

 
# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
 is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

set -g base-index 1

#Keep window numbers consistent with the count
set -g renumber-windows on

# Start pane numbering at 1
setw -g pane-base-index 1

# Rename your terminals
set -g set-titles on
set -g set-titles-string '#(whoami)::#h::#(curl ipecho.net/plain;echo)'

# Status bar customization
set -g status-utf8 on
set -g status-bg green 
set -g status-fg black 
set -g status-interval 5
set -g status-left-length 90
set -g status-right-length 60
set -g status-left "#[fg=black]#(whoami)#[fg=black]::#[fg=black] \
(hostname - s)#[fg=white]::##[fg=black]#(curl ipecho.net/plain;echo)"

set -g status-justify left
set -g status-right '#[fg=Cyan]#S #[fg=white]%a %d %b %R'

# Vim and Rails
setw -g mode-keys vi
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-processes 'irb pry "~rails server" "~rails console"'

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

#Splits
bind-key - split-window -v -c "#{pane_current_path}"
bind-key \ split-window -h -c "#{pane_current_path}"

# Open new window in current path
bind c new-window -c "#{pane_current_path}"

#Resize panes
bind -n C-8 resize-pane -x80

# Coarse adjustment (5 or 10 cursor cells per bump)
 bind -n C-Left resize-pane -L 10
 bind -n C-Right resize-pane -R 10
 bind -n C-Down resize-pane -D 5
 bind -n C-Up resize-pane -U 5

# Break a pane out to a new window
bind-key b break-pane -d

# Navigate sessions as a tree
bind-key C-j choose-tree


